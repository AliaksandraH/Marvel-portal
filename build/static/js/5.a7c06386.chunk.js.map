{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","setProcess","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","arr","items","map","item","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner"],"mappings":"qNASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAOG,cAACC,IAAO,IACnB,IAAK,UACD,OAAOF,EAAiBC,cAACF,EAAS,IAAME,cAACC,IAAO,IACpD,IAAK,aACD,OAAOD,cAACF,EAAS,IACrB,IAAK,QACD,OAAOE,cAACE,IAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BAE5B,EAmEeC,EAjEI,WACf,IAAAC,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDZ,EAAca,EAAA,GAAEC,EAAiBD,EAAA,GACxCE,EAA4BR,mBAAS,GAAES,EAAAP,YAAAM,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAsCZ,oBAAS,GAAMa,EAAAX,YAAAU,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA8CC,cAAtC1B,EAAOyB,EAAPzB,QAAS2B,EAAUF,EAAVE,WAAYC,EAAYH,EAAZG,aAE7BC,qBAAU,WACNC,EAAUX,GAAQ,EAEtB,GAAG,IAEH,IAAMW,EAAY,SAACX,EAAQY,GACbf,GAAVe,GACAH,EAAaT,GACRa,KAAKC,GACLD,MAAK,kBAAML,EAAW,aAAa,GAC5C,EAEMM,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZtB,EAAc,GAADwB,OAAAC,YAAK1B,GAAU0B,YAAKJ,KACjClB,GAAkB,GAClBI,EAAUD,EAAS,GACnBK,EAAeW,EACnB,EAqBA,OACII,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACxB1C,EAAWC,GAAS,kBArB7B,SAAqB0C,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,OACI3C,cAAA,MAAIqC,UAAU,eAAcC,SACxBF,eAACQ,IAAI,CAACC,GAAE,WAAAX,OAAaQ,EAAKI,IAAKR,SAAA,CAC3BtC,cAAA,OACI+C,IAAKL,EAAKM,UACVC,IAAKP,EAAKQ,MACVb,UAAU,qBAEdrC,cAAA,OAAKqC,UAAU,oBAAmBC,SAAEI,EAAKQ,QACzClD,cAAA,OAAKqC,UAAU,qBAAoBC,SAAEI,EAAKS,YARhBR,EAY1C,IACA,OAAO3C,cAAA,MAAIqC,UAAU,eAAcC,SAAEE,GACzC,CAImCY,CAAY3C,EAAW,GAAEV,GACpDC,cAAA,UACIqD,SAAUtD,EACVuD,MAAO,CAAEC,QAASnC,EAAc,OAAS,SACzCiB,UAAU,mCACVmB,QAAS,kBAAM7B,EAAUX,EAAO,EAACsB,SAEjCtC,cAAA,OAAKqC,UAAU,QAAOC,SAAC,kBAIvC,EClEemB,UAhBI,WACf,OACIrB,eAAAsB,WAAA,CAAApB,SAAA,CACIF,eAACuB,IAAM,CAAArB,SAAA,CACHtC,cAAA,QACI4D,KAAK,cACLC,QAAQ,iCAEZ7D,cAAA,SAAAsC,SAAO,qBAEXtC,cAAC8D,IAAS,IACV9D,cAACI,EAAU,MAGvB,C","file":"static/js/5.a7c06386.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./comicsList.scss\";\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case \"waiting\":\r\n            return <Spinner />;\r\n        case \"loading\":\r\n            return newItemLoading ? <Component /> : <Spinner />;\r\n        case \"confirment\":\r\n            return <Component />;\r\n        case \"error\":\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error(\"Unexpected process state\");\r\n    }\r\n};\r\n\r\nconst ComicsList = () => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const { process, setProcess, getAllComics } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n            .then(() => setProcess(\"confirment\"));\r\n    };\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    };\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img\r\n                            src={item.thumbnail}\r\n                            alt={item.title}\r\n                            className=\"comics__item-img\"\r\n                        />\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n        return <ul className=\"comics__grid\">{items}</ul>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n            <button\r\n                disabled={newItemLoading}\r\n                style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComicsList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Marvel Comics</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}